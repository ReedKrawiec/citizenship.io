{"version":3,"sources":["static/logo.png","Login.js","SignUp.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Logo","styled","img","_templateObject","Main","div","_templateObject2","Container","_templateObject3","LinkButton","a","_templateObject4","Input","input","_templateObject5","SignUp","_templateObject6","Button","button","_templateObject7","Link","L","_templateObject8","Login","react_default","createElement","src","logo","placeholder","type","Login_SignUp","Login_Link","to","Component","SignUp_templateObject","SignUp_templateObject2","SignUp_templateObject3","SignUp_templateObject4","SignUp_templateObject5","SignUp_templateObject6","SignUp_templateObject7","Header","SignUp_templateObject8","state","email","password","passwordRepeat","handleChangeEmail","event","_this","setState","target","value","handleChangePassword","handleChangePasswordRepeat","handleSubmit","preventDefault","alert","console","error","request","Axios","post","then","res","log","data","statusCode","props","history","push","pathname","SignUp_Main","SignUp_Container","SignUp_Logo","onSubmit","this","SignUp_Input","onChange","SignUp_Button","App","BrowserRouter","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.053e0d4f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.0c1d81b6.png\";","import React, { Component } from \"react\";\nimport { Link as L } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport logo from \"./static/logo.png\";\n\nconst Logo = styled.img`\n  width: 100%;\n  margin-bottom: 24px;\n  margin-top: 24px;\n`;\n\nconst Main = styled.div`\n  background-color: #334c7b;\n  width: 100vw;\n  height: 100vh;\n  padding-top: 100px;\n`;\n\nconst Container = styled.div`\n  margin: 0 auto;\n  width: 24rem;\n`;\n\nconst LinkButton = styled.a`\n  font-size: 14px;\n  width: fit-content;\n  color: white;\n  display: block;\n  margin: 0 auto;\n  margin-top: 16px;\n`;\n\nconst Input = styled.input`\n  color: white;\n  font-size: 14px;\n  font-family: sans-serif;\n  width: 100%;\n  border: none;\n  border-bottom: 2px solid white;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 8px;\n  appearance: none;\n  background-color: transparent;\n  margin-bottom: 16px;\n`;\n\nconst SignUp = styled.a`\n  color: white;\n  width: fit-content;\n  font-size: 14px;\n  margin: 0 auto;\n  margin-top: 80px;\n  margin-bottom: 15px;\n  display: block;\n`;\n\nconst Button = styled.button`\n  font-weight: 700;\n  color: white;\n  appearance: none;\n  border: none;\n  font-size: 16px;\n  width: 100%;\n  height: 40px;\n  border-radius: 20px;\n  background-color: #d03c42;\n`;\n\nconst Link = styled(L)`\n  color: white;\n`;\n\nclass Login extends Component {\n  render() {\n    return (\n      <div>\n        <Main>\n          <Container>\n            <Logo src={logo}/>\n            <Input placeholder=\"Email\" />\n            <Input placeholder=\"Password\" type=\"password\" />\n            <Button>Login</Button>\n            <LinkButton>Forgot your password?</LinkButton>\n            <SignUp>\n              New here? <Link to=\"/signup\">Sign up.</Link>\n            </SignUp>\n          </Container>\n        </Main>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport Axios from \"axios\";\nimport logo from \"./static/logo.png\";\n\nconst Logo = styled.img`\n  width: 100%;\n  margin-bottom: 24px;\n  margin-top: 24px;\n`;\n\nconst Main = styled.div`\n  background-color: #334c7b;\n  width: 100vw;\n  height: 100vh;\n`;\n\nconst Container = styled.div`\n  margin: 0 auto;\n  width: 24rem;\n`;\n\nconst Link = styled.a`\n  font-size: 14px;\n  width: fit-content;\n  color: white;\n  display: block;\n  margin: 0 auto;\n  margin-top: 16px;\n`;\n\nconst Input = styled.input`\n  color: white;\n  font-size: 14px;\n  font-family: sans-serif;\n  width: 100%;\n  border: none;\n  border-bottom: 2px solid white;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 8px;\n  appearance: none;\n  background-color: transparent;\n  margin-bottom: 16px;\n`;\n\nconst SignUpBar = styled.div`\n  color: white;\n  width: fit-content;\n  font-size: 14px;\n  margin: 0 auto;\n  margin-top: 80px;\n  margin-bottom: 15px;\n  display: block;\n`;\n\nconst Button = styled.button`\n  font-weight: 700;\n  color: white;\n  appearance: none;\n  border: none;\n  font-size: 16px;\n  width: 100%;\n  height: 40px;\n  border-radius: 20px;\n  background-color: #d03c42;\n`;\n\nconst Header = styled.div`\n  margin: 10px;\n  color: white;\n  font-weight: 700;\n  font-size: 24px;\n`;\n\nclass SignUp extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    passwordRepeat: \"\"\n  };\n\n  handleChangeEmail = event => {\n    this.setState({ email: event.target.value });\n  };\n\n  handleChangePassword = event => {\n    this.setState({ password: event.target.value });\n  };\n\n  handleChangePasswordRepeat = event => {\n    this.setState({ passwordRepeat: event.target.value });\n  };\n\n  /*handleSubmit = event => {\n    event.preventDefault();\n\n    const user = {\n      email: this.state.email,\n      password: this.state.password,\n      passwordRepeat: this.state.passwordRepeat\n    };\n\n    Axios\n      .post(`https://jsonplaceholder.typicode.com/users`, { user })\n      .then(res => {\n        console.log(res);\n        console.log(res.data);\n      });\n  };*/\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    const email =  this.state.email;\n    const password = this.state.password;\n    const passwordRepeat = this.state.passwordRepeat;\n\n    if (this.state.password != this.state.passwordRepeat) {\n      alert(\"Passwords do not match\");\n      console.error(\n        \"An error occured while making the request: Passwords do not match\"\n      );\n      //console.log(password);\n      //console.log(passwordRepeat);\n    } else {\n      const request = {\n          \"email\":this.state.email,\n          \"password\":this.state.password\n      }\n      Axios.post(`/signup`, request)\n        .then(res => {\n          console.log(email);\n          console.log(password);\n          // check status code\n\n          console.log(res.data.statusCode)\n\n          // if successful re-route to profile\n          if (res.data.statusCode === 200) {\n            // *** remember to set status code in backend ***\n            this.props.history.push({\n              pathname: \"/profile\",\n              state: res.data\n            });\n          } else {\n            // if not successful, return alert\n            alert(\"Validation error occurred. \" + res.data);\n            console.log(\"Error \" + res.data.statusCode);\n          }\n        })\n     \n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <Main>\n          <Container>\n            <Logo src={logo} />\n            <Header>Sign Up</Header>\n            <form onSubmit={this.handleSubmit}>\n              <Input placeholder=\"Email\" onChange={this.handleChangeEmail} />\n              <Input\n                placeholder=\"Enter a password\"\n                type=\"password\"\n                onChange={this.handleChangePassword}\n              />\n              <Input\n                placeholder=\"Reenter your Password\"\n                type=\"password\"\n                onChange={this.handleChangePasswordRepeat}\n              />\n              <Button type=\"submit\">Sign Up</Button>\n            </form>\n          </Container>\n        </Main>\n      </div>\n    );\n  }\n}\n\nexport default SignUp;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport Login from \"./Login\";\nimport SignUp from \"./SignUp\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div>\n          <Route exact path=\"/\" component={Login} />\n          <Route path=\"/signup\" component={SignUp} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}